.decl addition(file: symbol, line: number, type: symbol)
.input addition

.decl subtraction(file: symbol, line: number, type: symbol)
.input subtraction

.decl multiplication(file: symbol, line: number, type: symbol)
.input multiplication

.decl division(file: symbol, line: number, type: symbol)
.input division

.decl fma(file: symbol, line: number, type: symbol)
.input fma

.decl fabs(file: symbol, line: number, type: symbol)
.input fabs

.decl negation(file: symbol, line: number, type: symbol)
.input negation

.decl optimize(file: symbol, line: number, op: symbol, type: symbol)
.output optimize

optimize(f, l, "addition", t)        :- addition(f, l, t).
optimize(f, l, "subtraction", t)     :- subtraction(f, l, t).
optimize(f, l, "multiplication", t)  :- multiplication(f, l, t).
optimize(f, l, "division", t)        :- division(f, l, t).
optimize(f, l, "fma", t)             :- fma(f, l, t).
optimize(f, l, "fabs", t)            :- fabs(f, l, t).
optimize(f, l, "negation", t)        :- negation(f, l, t).